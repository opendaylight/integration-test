{
  "comments": [
    {
      "key": {
        "uuid": "bada0100_06f923c8",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-11-05T12:28:57Z",
      "side": 1,
      "message": "Expand to distinguish from Change 28730.",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 13
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_544a8284",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 22,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-27T17:02:58Z",
      "side": 1,
      "message": "Run-time immutables look better in ALL_CAPS.",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 18
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_b47deeb3",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 24,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-27T17:02:58Z",
      "side": 1,
      "message": "Tidy to 4 spaces.",
      "range": {
        "startLine": 24,
        "startChar": 28,
        "endLine": 24,
        "endChar": 30
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_d45d124a",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 82,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-27T17:02:58Z",
      "side": 1,
      "message": "DateTime Robot Library makes things more readable than relying on Python code.",
      "range": {
        "startLine": 82,
        "startChar": 45,
        "endLine": 82,
        "endChar": 54
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_94578a26",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 93,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-27T17:02:58Z",
      "side": 1,
      "message": "Oh, this removes the line with prompt fragment.\nDocument thoroughly and move to SSHKeywords.",
      "range": {
        "startLine": 93,
        "startChar": 73,
        "endLine": 93,
        "endChar": 78
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_34401e56",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 96,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-27T17:02:58Z",
      "side": 1,
      "message": "These few Keywords fit into a separate Resource.\nWill they be moved, or will you keep them in this suite to reduce scenarios they should handle?",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 26
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_97b8ec2b",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 96,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-10-27T18:04:43Z",
      "side": 1,
      "message": "I will have to move them as there is another suite that needs this exact same code. I was undecided how to name the resource but I now strongly suspect the best name will be simply \"ODLKeywords\" as these keywords deal with ODL in a general way.",
      "parentUuid": "dad5f5cf_34401e56",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 26
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_94054a16",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 127,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-27T17:02:58Z",
      "side": 1,
      "message": "Make sure previous lines do not fail out of this Keyword without executing this.",
      "range": {
        "startLine": 127,
        "startChar": 15,
        "endLine": 127,
        "endChar": 50
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_3417be53",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-27T17:02:58Z",
      "side": 1,
      "message": "Another Resourcable block, which begs for its own variables file.\n\nSuch pretty-printing to Robot console may be useful when one is debugging a long-running suite (ability to abort and not care about log.html or karaf.log).\n\nIdeally, all of this will be hidden in a resource, which itself would react to option variables; so that people not liking it could keep it disabled.\n\nOverall a nice functionality, but current implementation without Documentation is not helping with review times.",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 9
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_f7ab78d4",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-10-27T18:04:43Z",
      "side": 1,
      "message": "I am strongly leaning towards moving all this stuff into a resource as there is another test that needs it and I suspect the BGP performance suite also could make user of this.\n\nHowever to make this perfect it will also need to develop another \"atexit\" set of keywords which will allow you to establish your \"test case teardown\" keyword during the test suite run. The robot\u0027s [Teardown] is pretty limited, especially when you need to do multiple teardown actions and I don\u0027t like to require the users of the keywords to remember to put [Teardown] End_Verbose_Test into each suite that uses this facility.\n\nDisabling this stuff using a variable was considered but not implemented yet.",
      "parentUuid": "dad5f5cf_3417be53",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 9
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_20dd3443",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-28T16:15:44Z",
      "side": 1,
      "message": "\u003e \"atexit\" set of keywords\n\nHow would specifying what to do in test case teardown using \"atexit\" keyword be easier than just defining the aggregate teardown keyword in the suite?",
      "parentUuid": "dad5f5cf_f7ab78d4",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 9
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_9380fe8c",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-11-02T11:39:46Z",
      "side": 1,
      "message": "When extracting this stuff into a resource, \"atexit\" keyword will allow the resource to completely encapsulate the setup and teardown stuff, leading to the API having exactly 1 keyword (Verbose_Line here but will most likely be renamed) which will automatically do the right thing. The test using the keyword won\u0027t need to care about anything.\n\nWith the \"define aggregate teardown\" approach every test that wants to use Verbose_Line must solve the setup and teardown of the keyword or the screen will messed up. This means doing this work over and over again. And messing up around if the test also needs to use other that needs to use other stuff from other resources that mucks around with setup and teardown, like FailFast. This will quickly lead to incomprehensible suites where the tests and their steps get drowned in a flood of boilerplate crapola because the support infrastructure is missing the configuration and deconfiguration part of supporting the tests. In my opinion the test suites shall contain the tests with their test steps and only a very little else. Stuff like setup and teardown shall be put out of view into the testing infrastructure in libraries, especially if it is specific to these libraries.\n\nThe problem here is that my time as a testcase writer is very expensive. I don\u0027t want to waste it on 2-6 hours long debugging section ending with that \"I forgot to call that initialization of this resources ... again\" sort of shout. Nor I want to waste energy on remembering to call a plethora of setups and teardowns for each and every resource I want to use. Especially when they aren\u0027t going to work unless they are placed there in the correct order.\n\nAnd the reason for all of this infrastructure refactoring is that the complexity of using the current resources had risen to the point where I am experiencing exponential reduction of productivity with every additional piece of complexity overhead of using an additional resource. You might have this threshold much higher and therefore can\u0027t see these problems at all cause they won\u0027t hurt you for quite a while. Actually, now I reached the point where refactoring the infrastructure is the fastest way to get all of this merged.",
      "parentUuid": "dad5f5cf_20dd3443",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 9
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_26922758",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-11-05T12:28:57Z",
      "side": 1,
      "message": "So the \"atexit\" would build setup and teardown action lists based on order of calls to resource Setups, so that this order does not need to be maintained also in explicit test setup and teardown keyword definitions?",
      "parentUuid": "bada0100_9380fe8c",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 9
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab9d9a7_8ac3eb37",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 140,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-11-09T17:38:17Z",
      "side": 1,
      "message": "Something like this. I don\u0027t have the details nailed down yet but the idea here is to either get rid of the resource setups and teardowns completely (and to have them called automatically based on the usage of the resources) or to design a coding standard and a tool to check that coding standard and give -1 for verification if violated and then construct the \"atexit\" so that the setups and teardowns of the used resources are always called all and in the correct order whenever the coding standard is met. Or a mixed approach (some resources that are independent and don\u0027t care when exactly their setup and teardown is called would have them encapsulated, the others which depend on other resources would have their setups and teardowns called at the correct time and in correct order by the coding standard approach).\n\nTo see an example of a keyword that would be greatly simplified by these \"atexit\" keywords, see here: https://git.opendaylight.org/gerrit/#/c/29456/1/csit/libraries/MemoryWatch.robot@82. From the 5 lines that are in the keyword only 1 and a half are implementing the functionality of the keyword, the rest is needed to accommodate the setup and teardown of the resource used.",
      "parentUuid": "bada0100_26922758",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 140,
        "endChar": 9
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_d40bd229",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 165,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-27T17:02:58Z",
      "side": 1,
      "message": "Was this supposed to be (also) a performance suite? All this logging and waiting does not help. Write the answer to Documentation in Settings table.",
      "range": {
        "startLine": 165,
        "startChar": 69,
        "endLine": 165,
        "endChar": 73
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_97e6ac43",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 165,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-10-27T18:04:43Z",
      "side": 1,
      "message": "The logging is to be able to track down interesting log messages in karaf.log when a mounting failure occurs and to see in which part of the mounting process (issuing the mount command or waiting for the device to become accessible on the mount point) the failure occured (that is not possible without these Log_Messages_To_Controller_Karaf keyword invocations).",
      "parentUuid": "dad5f5cf_d40bd229",
      "range": {
        "startLine": 165,
        "startChar": 69,
        "endLine": 165,
        "endChar": 73
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_40e2b804",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 165,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-28T16:15:44Z",
      "side": 1,
      "message": "So this is not a performance suite, this is suite for reproducing a known Bug?",
      "parentUuid": "dad5f5cf_97e6ac43",
      "range": {
        "startLine": 165,
        "startChar": 69,
        "endLine": 165,
        "endChar": 73
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bada0100_7336ba05",
        "filename": "csit/suites/netconf/scale/mountunmount.robot",
        "patchSetId": 13
      },
      "lineNbr": 165,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-11-02T11:39:46Z",
      "side": 1,
      "message": "This is a performace and scaling suite that may hit unknown bugs. When it does, we want to be able to see what went wrong, when and why. The logging is a part of the infrastructure to help figure out that \"when\" in the above sentence. Creating and running a specialized test suite to hit the bug is not going to be possible if we can\u0027t figure out what to do in order for the bug to occur.\n\nThe second point here is that this suite is testing the performance of \"doing a single mount operation when N devices are already mounted\". The \"issue a batch of single mount operations\" performance number is a part of the other test suite (\"performance of multithreaded GET requests\") which is all about \"bulking the requests together. Another interesting idea would be \"N threads doing the mounts\" but that is \"nice to have\".",
      "parentUuid": "dad5f5cf_40e2b804",
      "range": {
        "startLine": 165,
        "startChar": 69,
        "endLine": 165,
        "endChar": 73
      },
      "revId": "c172fc862b3162ac0fbabea4e9464d3badc8b0b0",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}