{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_f5885cc8",
        "filename": "tools/distchanges/changes.py",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-01-26T08:24:25Z",
      "side": 1,
      "message": "maybe this is better:\n                         self.epoch_to_utc(gerrit.get(\"grantedOn\"], 0)),\n                         self.epoch_to_utc(gerrit.get(\"lastUpdated\", 0),\n                         gerrit.get(\"number\", \"00000\"),\n                         gerrit.get(\"subject\", \"none\")))",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 99,
        "endChar": 79
      },
      "revId": "6e286a3339a59cb48d55e550e674e24543affc12",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_dc09e096",
        "filename": "tools/distchanges/changes.py",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 773
      },
      "writtenOn": "2017-02-02T15:36:55Z",
      "side": 1,
      "message": "I like this refactor, but it will still fail if the key isn\u0027t in the dictionary. That was problem - the parser fills out the dictionary and sometimes a key/value wasn\u0027t set. And then blows up here. So we need to check for the key first.",
      "parentUuid": "fafc7978_f5885cc8",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 99,
        "endChar": 79
      },
      "revId": "6e286a3339a59cb48d55e550e674e24543affc12",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_5c233005",
        "filename": "tools/distchanges/changes.py",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-02-02T15:46:23Z",
      "side": 1,
      "message": "The function \u0027get\u0027 is the alternative to the brackets [] in any dictionary. By using get(x, default), you specify the default value that will be used when the key x isn\u0027t in the dictionary.",
      "parentUuid": "fafc7978_dc09e096",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 99,
        "endChar": 79
      },
      "revId": "6e286a3339a59cb48d55e550e674e24543affc12",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}