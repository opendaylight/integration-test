{
  "comments": [
    {
      "key": {
        "uuid": "5911f435_36d4420b",
        "filename": "csit/libraries/netvirt/excepts.py",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 2264
      },
      "writtenOn": "2018-05-29T18:47:58Z",
      "side": 1,
      "message": "is there a better more intuitive name for this function\nso it makes more sense at the robot level what we are\ndoing?\n\nalong those lines, add the docs here so we don\u0027t have to\nread the code to get the high level idea. I did that, and\nI\u0027m understanding this to be going through the whole \nglobal _ex_map dict and then only printing the things\nthat are warning or error. with the pretty print stuff\nlike \"starting test...\".  Is that right? And we want this\nbecause otherwise if we just tried to print all of _ex_map\nwe\u0027d end up with a lot of INFO level stuff?",
      "range": {
        "startLine": 248,
        "startChar": 0,
        "endLine": 248,
        "endChar": 54
      },
      "revId": "4b21817e712e39127bc91a523b2f59b104b3215e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a11fd17f_1f2d546e",
        "filename": "csit/libraries/netvirt/excepts.py",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 773
      },
      "writtenOn": "2018-05-29T19:22:29Z",
      "side": 1,
      "message": "you mean write_exceptions_to_file(). And yes, forgot to add the doc so I will add that.\n\n_ex_map is a map of exceptions indexed with a line# that is the index into the whole list of lines from a log dump. Each exception is only in one line and that is the index. The map also has a pointer to the context lines. The idea was to minimize the amount of data copied into ex_map, and just point back to the full log list which has every line in a list.",
      "parentUuid": "5911f435_36d4420b",
      "range": {
        "startLine": 248,
        "startChar": 0,
        "endLine": 248,
        "endChar": 54
      },
      "revId": "4b21817e712e39127bc91a523b2f59b104b3215e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "275cd4f3_54c087a3",
        "filename": "csit/libraries/netvirt/excepts.py",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 2264
      },
      "writtenOn": "2018-05-29T23:10:13Z",
      "side": 1,
      "message": "well, isn\u0027t it \"Write Exception Map To File\"\n\nand not I\u0027m not sure I fully get what the end result is. is\nit a file with each exception and it\u0027s surrounding context\nlines, or just the exception?",
      "parentUuid": "a11fd17f_1f2d546e",
      "range": {
        "startLine": 248,
        "startChar": 0,
        "endLine": 248,
        "endChar": 54
      },
      "revId": "4b21817e712e39127bc91a523b2f59b104b3215e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e1d77da_5b1b9165",
        "filename": "csit/libraries/netvirt/excepts.py",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 2264
      },
      "writtenOn": "2018-05-29T18:47:58Z",
      "side": 1,
      "message": "is this better?\n\n  if !append:\n      mode \u003d \"w+\"\n\nor are you protecting from some garbage input as well?",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 258,
        "endChar": 19
      },
      "revId": "4b21817e712e39127bc91a523b2f59b104b3215e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fc64356_c1f38869",
        "filename": "csit/libraries/netvirt/excepts.py",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 773
      },
      "writtenOn": "2018-05-29T19:22:29Z",
      "side": 1,
      "message": "append or overwrite. a for append or w for write, the + just says create file if not already there. the normal mode is append since we want to keep writing to the file, adding exceptions and context, as this function is called for each test. I guess the param should be mode rather than append.",
      "parentUuid": "2e1d77da_5b1b9165",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 258,
        "endChar": 19
      },
      "revId": "4b21817e712e39127bc91a523b2f59b104b3215e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27f18133_cb981b0e",
        "filename": "csit/libraries/netvirt/excepts.py",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 2264
      },
      "writtenOn": "2018-05-29T23:10:13Z",
      "side": 1,
      "message": "if we don\u0027t call it with anything for the variable append,\nit defaults to a+\n\noh, yeah, can\u0027t we just call the variable mode and default\nit to a+ and remove this whole block?",
      "parentUuid": "0fc64356_c1f38869",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 258,
        "endChar": 19
      },
      "revId": "4b21817e712e39127bc91a523b2f59b104b3215e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83e132d0_cbd50d89",
        "filename": "csit/libraries/netvirt/excepts.py",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 2264
      },
      "writtenOn": "2018-05-29T18:57:26Z",
      "side": 1,
      "message": "btw, this is not going to be there until the\nabove get_exceptions() is run. is that a problem? I think\nthe robot keyword would just barf and the test author\nwould realize it and fix their flow. stupid globals",
      "range": {
        "startLine": 263,
        "startChar": 27,
        "endLine": 263,
        "endChar": 34
      },
      "revId": "4b21817e712e39127bc91a523b2f59b104b3215e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcb7288e_1488770e",
        "filename": "csit/libraries/netvirt/excepts.py",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 773
      },
      "writtenOn": "2018-05-29T19:22:29Z",
      "side": 1,
      "message": "You would get nothing in this case as the map is {}, so it would look just like a case where no exceptions were found. Yes, if you wanted real data, then the user would have needed to run verify_exceptions() to get the list. Python is a little different in that a class is weak, so many times they view the module itself as the class. in that way this isn\u0027t global - this is local to the excepts module.",
      "parentUuid": "83e132d0_cbd50d89",
      "range": {
        "startLine": 263,
        "startChar": 27,
        "endLine": 263,
        "endChar": 34
      },
      "revId": "4b21817e712e39127bc91a523b2f59b104b3215e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5282fe28_1b41f6df",
        "filename": "csit/libraries/netvirt/excepts.py",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 2264
      },
      "writtenOn": "2018-05-29T23:10:13Z",
      "side": 1,
      "message": "ok. got it.",
      "parentUuid": "bcb7288e_1488770e",
      "range": {
        "startLine": 263,
        "startChar": 27,
        "endLine": 263,
        "endChar": 34
      },
      "revId": "4b21817e712e39127bc91a523b2f59b104b3215e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}