{
  "comments": [
    {
      "key": {
        "uuid": "3a79b1b5_63199a87",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-08T17:11:42Z",
      "side": 1,
      "message": "I think that tidy will remove this line.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 3
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_ebb90016",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T22:01:44Z",
      "side": 1,
      "message": "this should be in the KarafKeywords library, not utils.  I know this patch did not introduce that.  not sure how that fell through the cracks.  I\u0027ll try to find time to push a new review that changes this and report back on this one so you can reference from there.",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 57,
        "endChar": 35
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_eb010007",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T23:51:15Z",
      "side": 1,
      "message": "Looking closer, I could not find any other places that are merged now that use this keyword from Utils.  I wonder if you missed the karafKeywords library [0] altogether.  I think a good thing to do would be to add this keyword to that library, and that library already has a keyword called \"Issue Command On Karaf Console\" that you can probably use.  Please feel free to make things better if you have problems.\n\n[0]  https://github.com/opendaylight/integration-test/blob/master/csit/libraries/KarafKeywords.robot",
      "parentUuid": "3a79b1b5_ebb90016",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 57,
        "endChar": 35
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_892df448",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-09T11:58:06Z",
      "side": 1,
      "message": "I suspect the reason why this \"fell through the cracks\" is that the code went merged before the community had a chance to take a look at it. The problem was timing pressure. And the fact that you cannot do reviews without using a mouse and without a network connection is definitely not helping these matters.",
      "parentUuid": "3a79b1b5_ebb90016",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 57,
        "endChar": 35
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_a930f09e",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-09T11:58:06Z",
      "side": 1,
      "message": "Yes, I missed it. Only after it got merged, I realized this library exists. The reason was time pressure (caused by an inefficient administration/review/whatever process).",
      "parentUuid": "3a79b1b5_eb010007",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 57,
        "endChar": 35
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_24c6454a",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-09T14:48:35Z",
      "side": 1,
      "message": "The problem with \"Issue Command On Karaf Console\" is that it will clobber the current SSH connection, asking for elaborate saving and restoring. The second problem with \"Issue Command On Karaf Console\" is that it open and closes a SSH connection each time it is used (huge time hog) and I don\u0027t want that in performance tests. Refactoring the stuff to play nice with performance testing would take several weeks of work if done properly and I also would be unable to make sure I did not break anything which translates to a need for a lengthy review from the community. Take a peek at this change: https://git.opendaylight.org/gerrit/26734. I am thus forced to go by \"the easy way\" by simply moving the stuff into the KarafKeywords library but leaving the keywords as they are, see https://git.opendaylight.org/gerrit/26718.",
      "parentUuid": "3a79b1b5_eb010007",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 57,
        "endChar": 35
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_eb5020d6",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 59,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T22:01:44Z",
      "side": 1,
      "message": "I think the assumption we are making with all of our suites is that ODL is up and running and stable before the suites are started, so you should be safe.  I\u0027m sure when running these suites locally and doing the ODL startup/install manually (or other) you might run in to issues so this wont hurt to have.",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 59,
        "endChar": 108
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_23463824",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 59,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-10T15:20:05Z",
      "side": 1,
      "message": "\u003e I think the assumption we are making with all of our suites is that ODL is up and running and stable before the suites are started\n\nSee my comment in Reconfigure_Data_Change_Counter.",
      "parentUuid": "3a79b1b5_eb5020d6",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 59,
        "endChar": 108
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_cb6c449f",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T22:01:44Z",
      "side": 1,
      "message": "oh, btw, here is an example of the keyword being \"defined with spaces\" but the being \"referenced_with_underscores\".  if we are ok with having both, then nothing to worry about.",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 41
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_ee182e77",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T23:51:15Z",
      "side": 1,
      "message": "I\u0027m not sure what\u0027s really going on under the hood here, but is this PUT XML via restconf keyword doing some heavy lifting such that it might take up to 60s to complete?",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 198
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_097d641c",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-09T11:58:06Z",
      "side": 1,
      "message": "This is another example of poor code design. This command is doing 2 things at once, the first one is to wait for the change counter feature to become ready and the second one is to do the reconfiguration of the feature.",
      "parentUuid": "3a79b1b5_ee182e77",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 198
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_a3ba4808",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-10T15:20:05Z",
      "side": 1,
      "message": "Oh, I have not noticed this ugly construct.\nI recommend to deal with readiness issues in a way similar to netconf-connector case: https://git.opendaylight.org/gerrit/#/c/26446\nOrder of readiness expected: bgp_topology, netconf_connector, change_counter_config_module.",
      "parentUuid": "3a79b1b5_097d641c",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 198
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_8b064ccd",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 78,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T22:01:44Z",
      "side": 1,
      "message": "+1 to doing that.  common/global variables can all be in one location so people have fewer places to reference when they want to build new tests.",
      "range": {
        "startLine": 78,
        "startChar": 4,
        "endLine": 78,
        "endChar": 61
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_8e273ab6",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 81,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T23:51:15Z",
      "side": 1,
      "message": "one thing I notice here is that this \"test case\" does not appear to have any \"test\".  Meaning there is nothing for it to fail on, is there?  That being the case, I would think it makes more sense to collapse this work in to the next test case.",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 81,
        "endChar": 48
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_09a484a4",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 81,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-09T11:58:06Z",
      "side": 1,
      "message": "1. \"SSHLibrary.Write\" can fail (when the connection to the machine crashes for example).\n2. This would take time in the following test case (which is doing the performance measurements) and it does not logically fit into the previous \"test case\" (which also technically is not a test case at all).\n\nThe reason for this is that Robot does not have an easy way (or I don\u0027t know about an easy way) to tell it \"now I need to adjust the setup of the environment but I don\u0027t want the time needed to do so to be billed to the next test case\". Or, maybe this could be done by some smart tagging. Tag these as \"setup\" or \"configuration\" and somehow explain to Robot that these \"setup\" cases are not real tests and should not be included in the results tally.",
      "parentUuid": "3a79b1b5_8e273ab6",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 81,
        "endChar": 48
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_a316c8ef",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 81,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-10T15:20:05Z",
      "side": 1,
      "message": "\u003e these \"setup\" cases are not real tests\n\nThey do not test the focus component (BGP), but they test the environment by changing its state. They are not expected to fail at all, but if they do, we definitely want to have that in the results tally, in a way visibly different from failure of subsequent \"real\" test case. But we can use a tag for \"real\" tests so that we can filter the test results.",
      "parentUuid": "3a79b1b5_09a484a4",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 81,
        "endChar": 48
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_404f9f92",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 81,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-14T23:43:38Z",
      "side": 1,
      "message": "Is there something wrong with billing the setup time to the real work  of the test case?  Ideally, each test case here would have some valid checks to pass/fail against specifically for the BGP functionality.\n\nwhat about a [Setup] that calls a local keyword that will do the setup work.  The time spent would be billed to the actual test case, but it would end up in the \"Setup\" section.  just an idea.",
      "parentUuid": "3a79b1b5_a316c8ef",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 81,
        "endChar": 48
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_3b8ded31",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 81,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-16T13:33:51Z",
      "side": 1,
      "message": "Well, I don\u0027t know about anyone else but in my case when I see [Setup] do_some_setup_work_keyword, I would also expect [Teardown] undo_some_setup_work_keyword, i.e. stuff that is being set up using [Setup] in the testcase is torn down using [Teardown] in the same testcase. This particular setup is town down 2 testcases later so I don\u0027t consider adding it as [Setup] to be readable. Yes, it is probably true that I could add [Setup] to the following test case and its corresponding [Teardown] to the case immediately following it but I would find such code rather confusing.\n\nAnd, additionally, billing this setup time to the following testcase might make the results harder to read as they would be confusing as well.\n\nAdditionally, this code is, strictly speaking, not a setup at all. It simulates an event \"a BGP peer has connected to ODL\". Also the \"Kill_XXX_BGP_Speaker\" simulates the \"a BGP peer has disconnected from ODL\" event. I want to make it obvious where in the test suite these events are happening (and how: at one time the peer connects, at the other time the ODL connects) and therefore I don\u0027t want to have them hiding in some [Setup]/[Teardown] section somewhere in an unrelated piece of the suite.\n\nI wish Robot had support for this type of \"suite action that is not a test and is not a part of another test\" but it doesn\u0027t (or at least I am not aware of anything). That\u0027s why I am using a \"setup case\" here instead of a [Setup] section.",
      "parentUuid": "3a79b1b5_404f9f92",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 81,
        "endChar": 48
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_c6f420f4",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 81,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-16T15:56:29Z",
      "side": 1,
      "message": "\u003e what about a [Setup] that calls a local keyword that will do the setup work\n\nPersonally, I like each \"setup step\" to contribute to passrate, so that one sees \"how broken the build is\" just by looking at graphs, without the need to expand details in log.html\n\nIt is not much of an added value, but I do not see value of using [Setup] either; especially since FailFast.robot is used.\n\nIn my earlier times, I was using \"[Tag] auxiliary\" to mark such \"not real test casess\". But I never needed to filter them out, so I got lazy.\nHowever, it would be good to mark those cases somehow, just to avoid recommendations to eliminate them. :)",
      "parentUuid": "3a79b1b5_3b8ded31",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 81,
        "endChar": 48
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_2e3626e8",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T23:51:15Z",
      "side": 1,
      "message": "is this a question to still determine?",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 100
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_a3ed68f1",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 100,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-10T15:20:05Z",
      "side": 1,
      "message": "It is not a question, it is an answer.\nIt is there for readers, to tell them about a somewhat non-obvious scenario.\nTo be frank, I did not test that answer.",
      "parentUuid": "3a79b1b5_2e3626e8",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 100
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_b503650c",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-08T17:11:42Z",
      "side": 1,
      "message": "ODL shuld be much quickier at reacting to peer closing connection.",
      "range": {
        "startLine": 106,
        "startChar": 52,
        "endLine": 106,
        "endChar": 56
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_c9ad2c8a",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-09T11:58:06Z",
      "side": 1,
      "message": "I have seen ODL needing 60 seconds or even more to start the cleanup when it ingested massive amounts of routes (several M) and then the connection to the peer was dropped. This leads me to conclusion that performance bugs in ODL could cause significant delays here. Thus the large timeout here.\n\nI suspect the problem here is a performance bug in ODL. You know, the ODL must find the routes from the dead peer and remove them while keeping other routes intact. It occurs to me that it is traversing the whole RIB+Topology, hunting them down. I can easily imagine a situation when there are several peers with 500k-1M routes and then one 10k routed one disconnects. It might take a long while for ODL wading through the routes from the 500k+ route servers before it finds some of the 10k routes from the disconnected peer.",
      "parentUuid": "3a79b1b5_b503650c",
      "range": {
        "startLine": 106,
        "startChar": 52,
        "endLine": 106,
        "endChar": 56
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_63bf50d1",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-10T15:20:05Z",
      "side": 1,
      "message": "Ok, but how long does it take in Sandbox?",
      "parentUuid": "3a79b1b5_c9ad2c8a",
      "range": {
        "startLine": 106,
        "startChar": 52,
        "endLine": 106,
        "endChar": 56
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_e0458b70",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-14T23:43:38Z",
      "side": 1,
      "message": "These are good questions to bring up with the BGP dev community.  We don\u0027t need to increase our WUKS timeouts if we think 60s is too long because of performance bugs.  Let\u0027s keep it to what we know is reasonable (have to learn that first) and let it fail with a test case log message pointing to the bugzilla.\n\nopenflowplugin tests had similar issues back in the Lithium time frame where people noticed the operational store wasn\u0027t always accurate so they added a sleep (60s) or WUKS.  We learned that openflowplugin has a 3s polling timer to collect stats.  So, if the\nstats are not there after 4s we should be failing the test case.  If they got there afterward, and it was using a 60s sleep then the test would have passed and we would not have noticed that stats collection is having an issue.",
      "parentUuid": "3a79b1b5_63bf50d1",
      "range": {
        "startLine": 106,
        "startChar": 52,
        "endLine": 106,
        "endChar": 56
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_1bdfd10e",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-16T13:33:51Z",
      "side": 1,
      "message": "Maybe add 2 cases. The first one will use WUKS with some small timeout and \"fail with a test case log message pointing to the bugzilla\" if the timeout is missed. Then this testcase would continue the WUKS with much larger timeout to make sure this test passes unless something is really wrong (like dead MDSAL or something). This way we will know there is a problem (manifested by a test failure) but will still be able to see some performance numbers.",
      "parentUuid": "3a79b1b5_e0458b70",
      "range": {
        "startLine": 106,
        "startChar": 52,
        "endLine": 106,
        "endChar": 56
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_e6f7dcf3",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-16T15:56:29Z",
      "side": 1,
      "message": "\u003e Maybe add 2 cases.\n\nThat would be a good idea if there is such a performance bug currently, or if you want to implement it anyway.\n\nI am just asking because I suspect the first \"small timeout\" case is sufficient right now.",
      "parentUuid": "3a79b1b5_1bdfd10e",
      "range": {
        "startLine": 106,
        "startChar": 52,
        "endLine": 106,
        "endChar": 56
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_ce3452e0",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T23:51:15Z",
      "side": 1,
      "message": "not following this comment?",
      "range": {
        "startLine": 113,
        "startChar": 4,
        "endLine": 113,
        "endChar": 63
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_03b69cfa",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-10T15:20:05Z",
      "side": 1,
      "message": "It refers to value present in --myport\u003d17900\nWhen the TODO was written in bgpuser, there was only one occurrence. Now there are two suites more, so perhaps now it is worth to put that value into Variables.py",
      "parentUuid": "3a79b1b5_ce3452e0",
      "range": {
        "startLine": 113,
        "startChar": 4,
        "endLine": 113,
        "endChar": 63
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_0049a78a",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 113,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-14T23:43:38Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "3a79b1b5_03b69cfa",
      "range": {
        "startLine": 113,
        "startChar": 4,
        "endLine": 113,
        "endChar": 63
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_2e3dc6bb",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T23:51:15Z",
      "side": 1,
      "message": "I always like to ask the question when I see large polling times; is there something meaningful about 180s?  is it possible that things could still be working and happily finishing after 179s.  A lot of people just pick something that\u0027s sufficiently large, but too large and then when there is truly a bug, our tests would spin for 360s in this test case before giving up.  If we can narrow it down to knowing that trouble is there (e.g. bug found) after some shorter time, it\u0027s well worth it.",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 150,
        "endChar": 53
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_69ebb8b0",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-09T11:58:06Z",
      "side": 1,
      "message": "It takes about 40 seconds to drop 1M routes on our private lab. The sandbox/releng performance is about 3 times worse which translates to 120 seconds. The remaining 60 seconds is a \"safety margin\". That explains the 180s in the \"..._To_Become_Empty\" line. The other 180s is due to a performance bug in ODL where it may take so much time for it to start cleaning up when there is a large amount of routes in RIB/Topology. And I already designed these keywords to bail out of the loop early if the change counter spits out an error message instead of a result but it is not easy to see that. Namely, Robot does not have support for keywords which tri-state results (PASS, FAIL_NOT_BUT_MAY_PASS_LATER and FAIL_WITH_NO_HOPE_TO_PASS) so a bunch of tricks must be employed to make it work. See \"Check_Topology_Stability\" keyword and note that it is designed to PASS when the response code returned from the request is an error - this is exactly the tricky part used to bail out of the Wait_Until_Keyword_Succeeds keyword.",
      "parentUuid": "3a79b1b5_2e3dc6bb",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 150,
        "endChar": 53
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_a05f9340",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-14T23:43:38Z",
      "side": 1,
      "message": "I\u0027m getting the sense that you are doing a lot of tricks just to get the tests to pass, instead of letting things fail because there are\nreal issues?\n\nwhat\u0027s the difference in setups between the sandbox and your internal lab? the sandbox VMs should be 4core and 8G RAM.  Maybe your lab has much beefier setups?",
      "parentUuid": "3a79b1b5_69ebb8b0",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 150,
        "endChar": 53
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_3be2cdd5",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-16T13:33:51Z",
      "side": 1,
      "message": "\u003e I\u0027m getting the sense that you are doing a lot of tricks just to get the tests to pass\n\nThis is not a functional suite. The purpose of this test is to determine the time it takes to dump 1M routes from a dead peer out of the topology. It shall not fail because there is some performance issue, it shall show the performance issue in the performance timing instead (but still succeed in capturing the time measurement).\n\nThere is nothing specified regarding what should be happening in ODL while it is cleaning that dead routes up. Therefore I can\u0027t proclaim this type of latency to be some sort of issue and fail the test. Additionally, the ODL eventually succeeds in completing the cleanup so I don\u0027t consider it fair to FAIL the test here.\n\nThe real reason for \"tricks to make this test pass\" is that this topology stuff does not provide any way of determining whether it is up-to-date or not. And based on discussions with the developers, with the current design of the code it is completely impossible to provide such a feature. So what I am doing here is to force some sort of internal performance counter (called \"data change counter\") into the task of determining whether the topology is up-to-date. That performance counter was not meant to be used this way according to my understanding. This is inherently tricky and this is why you see it as \"tricks to make the test pass\". This is also one of the reasons why I have 2 test suites here. The other one is simply repeatedly downloading the topology to see if it is already empty or not. That testcase does not have \"any tricks to make it pass\" but its accuracy in determining the performance numbers is abysmal.\n\nI agree that there could (and maybe even should) be another testcase that examines the structure of the timings measures here and fails if it sees something odd. But I definitely don\u0027t want to mess this performance measurement testcase with code that detects oddities that should not be there.\n\n\u003e the sandbox VMs should be 4core and 8G RAM.\n\nWhat speed are these 4 sandbox cores? In our lab there are also 4 cores and 8G RAM. The cores run at 3GHz.\n\nThe lab\u0027s VMs are using QEMU and KVM. Maybe that\u0027s what makes them \"beefier\" as I heard sandbox/integration uses VmWare. KVM is integrated directly with the Linux kernel and QEMU has a bunch of \"virtual I/O\" based devices that speed things up a lot while VmWare tries to emulate some real devices, slowing it down quite a lot (my own experience: I witnessed QEMU/KVM and then VmWare running on the same hardware with VmWare being much slower than QEMU/KVM).",
      "parentUuid": "3a79b1b5_a05f9340",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 150,
        "endChar": 53
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_26d5d442",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-16T15:56:29Z",
      "side": 1,
      "message": "\u003e The cores run at 3GHz.\n\nNot saying much in current times. Perhaps mentioning Xeon(R) says more.",
      "parentUuid": "3a79b1b5_3be2cdd5",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 150,
        "endChar": 53
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_324f47bf",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-21T13:23:17Z",
      "side": 1,
      "message": "/proc/cpuinfo says \"model name: Intel(R) Xeon(R) CPU E5-2690 v2 @ 3.000GHz\" (the 3.000GHz may differ for idle CPUs).",
      "parentUuid": "3a79b1b5_26d5d442",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 150,
        "endChar": 53
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_dc3ea129",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-21T23:16:19Z",
      "side": 1,
      "message": "Thanks Jozef.  I wasn\u0027t implying anything negative with my \"tricks to make the test pass\" comment :)  I just want to make sure we are as mean as we can be to ODL and it\u0027s projects so we limit the bugs that might sneak through.\n\nI follow your logic here.  We have openflow tests looking for scale numbers that do similar things.",
      "parentUuid": "3a79b1b5_3be2cdd5",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 150,
        "endChar": 53
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_ce4bf257",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 156,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-08T23:51:15Z",
      "side": 1,
      "message": "it would be great to find what to check here.  some tests are relying on a happy 200 back from a DELETE rest call, but I lobby for a double check with a follow up GET if possible",
      "range": {
        "startLine": 156,
        "startChar": 4,
        "endLine": 156,
        "endChar": 47
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_69397840",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 156,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-09T11:58:06Z",
      "side": 1,
      "message": "This is actually part of the suite teardown but it is in the form of a testcase because it can fail and when teardown fails, bad things start to happen. My opinion is that the additional checks belong to the functional test suite.",
      "parentUuid": "3a79b1b5_ce4bf257",
      "range": {
        "startLine": 156,
        "startChar": 4,
        "endLine": 156,
        "endChar": 47
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_638d1031",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 156,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-10T15:20:05Z",
      "side": 1,
      "message": "It is part of suite cleanup, but it does not have consequences of Suite Teardown yet.\n\nLibrary ConfigViaRestconf got Verify_* keywords in https://git.opendaylight.org/gerrit/#/c/26643 (not merged yet), but that needs expected config data after deletion.\n\nI also agree that such check is mostly needed in functional suite, so perhaps adding check after delete is a task for separate change (affecting all suites which delete configuration).",
      "parentUuid": "3a79b1b5_69397840",
      "range": {
        "startLine": 156,
        "startChar": 4,
        "endLine": 156,
        "endChar": 47
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_c05acf4f",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 156,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-14T23:43:38Z",
      "side": 1,
      "message": "can you re-explain this part?  If this is part of suite teardown, why not just put the work in \"Teardown_Everything\"?",
      "parentUuid": "3a79b1b5_638d1031",
      "range": {
        "startLine": 156,
        "startChar": 4,
        "endLine": 156,
        "endChar": 47
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_c642e00f",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 156,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-16T15:56:29Z",
      "side": 1,
      "message": "Because failure in suite teardown sets all previous testcase results to failed.\nAnd even if this particular step is told to not cause failure, we still would not see its effect on passrate (making us blind to potential Bugs until someone actually looks deeply enough to log.html).",
      "parentUuid": "3a79b1b5_c05acf4f",
      "range": {
        "startLine": 156,
        "startChar": 4,
        "endLine": 156,
        "endChar": 47
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_3c3a3537",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 156,
      "author": {
        "id": 2264
      },
      "writtenOn": "2015-09-21T23:16:19Z",
      "side": 1,
      "message": "got it.  thanks.",
      "parentUuid": "3a79b1b5_c642e00f",
      "range": {
        "startLine": 156,
        "startChar": 4,
        "endLine": 156,
        "endChar": 47
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_f549ddb7",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 235,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-08T17:11:42Z",
      "side": 1,
      "message": "Replace space with dot.",
      "range": {
        "startLine": 235,
        "startChar": 25,
        "endLine": 235,
        "endChar": 26
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_6902d870",
        "filename": "csit/suites/bgpcep/bgpingest/singlepeer_changecount.robot",
        "patchSetId": 8
      },
      "lineNbr": 235,
      "author": {
        "id": 2877
      },
      "writtenOn": "2015-09-09T11:58:06Z",
      "side": 1,
      "message": "This is an unfinished sentence that \"fell through the cracks\". Fixed.",
      "parentUuid": "3a79b1b5_f549ddb7",
      "range": {
        "startLine": 235,
        "startChar": 25,
        "endLine": 235,
        "endChar": 26
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_75d5cdb7",
        "filename": "csit/testplans/bgpcep-bgp-ingest.txt",
        "patchSetId": 8
      },
      "lineNbr": 8,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-09-08T17:11:42Z",
      "side": 1,
      "message": "This is just a directory with two suites, it is not clear what their run order is.",
      "range": {
        "startLine": 8,
        "startChar": 36,
        "endLine": 8,
        "endChar": 45
      },
      "revId": "abf1909531f507a2899336c2ae28c8111cbf7115",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}