# Copyright (c) 2016 Cisco and/or its affiliates.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- mode: ruby -*-
# vi: set ts=2 sw=2 sts=2 et ft=ruby :

def add_compute(config, name, mgmt_ip, port1, port2)
  config.vm.box_check_update = false
  config.vbguest.auto_update = true
  config.vm.define name do |node|
    if Vagrant.has_plugin?("vagrant-proxyconf")
      if ENV["http_proxy"]
        config.proxy.http     = ENV["http_proxy"]
      end
      if ENV["https_proxy"]
        config.proxy.https    = ENV["https_proxy"]
      end
      if ENV["no_proxy"]
        config.proxy.no_proxy = ENV["no_proxy"]
      end
    end
    node.vm.box = "puppetlabs/ubuntu-14.04-64-nocm"
    node.vm.hostname = name
    node.vm.provision "shell", path: "vagrant_scripts/fix-perms.sh"
    node.vm.provision "shell", path: "vagrant_scripts/add-user.sh"
    node.vm.provision "shell", path: "vagrant_scripts/install-prereqs.sh"
    node.vm.provision "shell", path: "vagrant_scripts/install-java8.sh"
    node.vm.provision "shell", path: "vagrant_scripts/install-vpp.sh"
    node.vm.provision "shell", path: "vagrant_scripts/configure-vpp.sh"
    node.vm.provision "shell", path: "vagrant_scripts/install-hc.sh"

    node.vm.network "private_network", ip: mgmt_ip
    node.vm.network "private_network", type: "dhcp", auto_config: false, virtualbox__intnet: port1
    node.vm.network "private_network", type: "dhcp", auto_config: false, virtualbox__intnet: port2
    node.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = 2
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
      vb.customize ["setextradata", :id, "VBoxInternal/CPUM/SSE4.1", "1"]
      vb.customize ["setextradata", :id, "VBoxInternal/CPUM/SSE4.2", "1"]
      vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      vb.customize ["modifyvm", :id, "--nicpromisc4", "allow-all"]
    end
  end
end

def add_controller(config, name, mgmt_ip, port1, port2)
  config.vm.box_check_update = false
  config.vbguest.auto_update = true
  config.vm.define name do |node|
    if Vagrant.has_plugin?("vagrant-proxyconf")
      if ENV["http_proxy"]
        config.proxy.http     = ENV["http_proxy"]
      end
      if ENV["https_proxy"]
        config.proxy.https    = ENV["https_proxy"]
      end
      if ENV["no_proxy"]
        config.proxy.no_proxy = ENV["no_proxy"]
      end
    end
    node.vm.box = "puppetlabs/ubuntu-14.04-64-nocm"
    node.vm.hostname = name
    node.vm.provision "shell", path: "vagrant_scripts/fix-perms.sh"
    node.vm.provision "shell", path: "vagrant_scripts/add-user.sh"
    node.vm.provision "shell", path: "vagrant_scripts/install-prereqs.sh"
    node.vm.provision "shell", path: "vagrant_scripts/install-java8.sh"
    node.vm.provision "shell", path: "vagrant_scripts/install-vpp.sh"
    node.vm.provision "shell", path: "vagrant_scripts/configure-vpp.sh"
    node.vm.provision "shell", path: "vagrant_scripts/install-hc.sh"
    #node.vm.provision "shell", path: "vagrant_scripts/install-odl.sh"

    node.vm.network "private_network", ip: mgmt_ip
    node.vm.network "private_network", type: "dhcp", auto_config: false, virtualbox__intnet: port1
    node.vm.network "private_network", type: "dhcp", auto_config: false, virtualbox__intnet: port2
    node.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = 4
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
      vb.customize ["setextradata", :id, "VBoxInternal/CPUM/SSE4.1", "1"]
      vb.customize ["setextradata", :id, "VBoxInternal/CPUM/SSE4.2", "1"]
      vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      vb.customize ["modifyvm", :id, "--nicpromisc4", "allow-all"]
      vb.customize ["modifyvm", :id, "--nicpromisc5", "allow-all"]
    end
  end
end

# install required plugins if necessary
if ARGV[0] == 'up'
    # add required plugins here
    required_plugins = %w( vagrant-vbguest vagrant-cachier)
    missing_plugins = []
    required_plugins.each do |plugin|
        missing_plugins.push(plugin) unless Vagrant.has_plugin? plugin
    end

    if ! missing_plugins.empty?
        install_these = missing_plugins.join(' ')
        puts "Found missing plugins: #{install_these}.  Installing..."
        cmd = "vagrant plugin install #{install_these}"
        updateResult = system( cmd )
        if updateResult
            puts "Plugins #{install_these} installed."
            #restart vagrant up process
            exec "vagrant up"
        else
            abort("Failed to install plugins: #{install_these}.")
        end
    else
        puts "No missing plugins. Ok to continue with vagrant setup."
    end
end

Vagrant.configure(2) do |config|
  # vagrant-cachier caches apt/yum etc to speed subsequent
  # vagrant up
  # to enable, run
  # vagrant plugin install vagrant-cachier
  #
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end

  add_controller(config, "controller", "192.168.255.100/24", "public_net", "tenant_net",)
  add_compute(config, "compute0", "192.168.255.101/24", "public_net", "tenant_net")
  #add_compute(config, "compute1", "192.168.255.102/24", "public_net", "tenant_net")
end
