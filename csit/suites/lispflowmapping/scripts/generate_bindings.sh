#!/bin/bash
echo "Downloading yang dependencies..."

DIRECTORY="odl-lispflowmapping-yang-files"

# /tmp/odl-lispflowmapping-yang-files will contain all the yang files
# /tmp/odl-lispflowmapping-yangfiles/LispFlowMappingYANGBindings will
# contain all the binding files generated by pyangbind.
CREATE_DIR="mkdir -p /tmp/$DIRECTORY"

# YANG_FILES holds the curl url to be downloaded in the VM on fly
# Before generating the binding files.
YANG_FILES="curl 'https://git.opendaylight.org/gerrit/gitweb?p=lispflowmapping.git;a=blob_plain;f=mappingservice/lisp-proto/src/main/yang/ietf-lisp-address-types.yang;hb=HEAD' -o /tmp/$DIRECTORY/ietf-lisp-address-types.yang"
YANG_FILES="$YANG_FILES;curl 'https://git.opendaylight.org/gerrit/gitweb?p=lispflowmapping.git;a=blob_plain;f=mappingservice/lisp-proto/src/main/yang/odl-lisp-proto.yang;hb=HEAD' -o /tmp/$DIRECTORY/odl-lisp-proto.yang"
YANG_FILES="$YANG_FILES;curl 'https://git.opendaylight.org/gerrit/gitweb?p=lispflowmapping.git;a=blob_plain;f=mappingservice/lisp-proto/src/main/yang/odl-inet-binary-types.yang;hb=HEAD' -o /tmp/$DIRECTORY/odl-inet-binary-types.yang"
YANG_FILES="$YANG_FILES;curl 'https://git.opendaylight.org/gerrit/gitweb?p=lispflowmapping.git;a=blob_plain;f=mappingservice/api/src/main/yang/odl-mappingservice.yang;hb=HEAD' -o /tmp/$DIRECTORY/odl-mappingservice.yang"
YANG_FILES="$YANG_FILES;curl 'https://git.opendaylight.org/gerrit/gitweb?p=lispflowmapping.git;a=blob_plain;f=mappingservice/lisp-proto/src/main/yang/odl-lisp-address-types.yang;hb=HEAD' -o /tmp/$DIRECTORY/odl-lisp-address-types.yang"
YANG_FILES="$YANG_FILES;curl 'https://git.opendaylight.org/gerrit/gitweb?p=mdsal.git;a=blob_plain;f=model/ietf/ietf-yang-types/src/main/yang/ietf-yang-types.yang;hb=HEAD' -o /tmp/$DIRECTORY/ietf-yang-types.yang"
YANG_FILES="$YANG_FILES;curl 'https://git.opendaylight.org/gerrit/gitweb?p=mdsal.git;a=blob_plain;f=model/ietf/ietf-inet-types/src/main/yang/ietf-inet-types.yang;hb=HEAD' -o /tmp/$DIRECTORY/ietf-inet-types.yang"
YANG_FILES="$YANG_FILES;curl 'https://git.opendaylight.org/gerrit/gitweb?p=mdsal.git;a=blob_plain;f=model/yang-ext/src/main/yang/yang-ext.yang;hb=HEAD' -o /tmp/$DIRECTORY/yang-ext.yang"
YANG_FILES="$YANG_FILES;curl 'https://git.opendaylight.org/gerrit/gitweb?p=controller.git;a=blob_plain;f=opendaylight/config/config-api/src/main/yang/config.yang;hb=HEAD' -o /tmp/$DIRECTORY/config.yang"

GO_TO_DIR="cd /tmp/$DIRECTORY"

# Currently bits are not supported in pyangbind plugin so
# We need to applyt the patch to generate pyangbind bindings
# Successfully.
APPLY_BITS="curl https://raw.githubusercontent.com/ashishk1994/ODL_TEST/master/bits.patch -o bits.patch;patch -i bits.patch && echo 'Patch applied successfully!'i"

# Generate binding files using pyangbind
GET_PLUGIN_LOC="PYBINDPLUGIN=\`/usr/bin/env python -c 'import pyangbind; import os; print \"%s/plugin\" % os.path.dirname(pyangbind.__file__)'\`"
GENERATE_BINDINGS="pyang --plugindir \$PYBINDPLUGIN -f pybind --build-rpcs --split-class-dir /tmp/$DIRECTORY/LISPFlowMappingYANGBindings ./odl-mappingservice.yang"

GO_BACK_TO_DIR="cd ../"

# Final Command to be executed
$DOWNLOAD_CMD = "$CREATE_DIR;$YANG_FILES;$GO_TO_DIR;$APPLY_BITS;$GET_PLUGIN_LOC;$GENERATE_BINDINGS;$GO_BACK_TO_DIR"
echo "$DOWNLOAD_CMD"

ssh {$ODL_SYSTEM_IP} "$DOWNLOAD_CMD"

echo "Yang Dependencies and bindings downloaded successfully in /tmp/$DIRECTORY"
