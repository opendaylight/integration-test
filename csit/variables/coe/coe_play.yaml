---

- hosts: coe-hosts
  vars:
    gopath: "{{ ansible_env.HOME }}/go"
    coe_path: "{{ gopath }}/src/git.opendaylight.org/gerrit/p/coe.git"
  environment:
    PATH: "{{ ansible_env.HOME }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin:/usr/local/go/bin:/usr/bin:/bin"
    GOPATH: "{{ gopath }}"
    GOROOT: /usr/local/go
  tasks:
    - name: Make CNI config directory
      file:
        path: /etc/cni/net.d
        state: directory
      become: true
    - name: Generate cni config
      template:
        src: "{{ conf_path }}"
        dest: /etc/cni/net.d/odlovs-cni.conf
      become: true
    - name: Create $HOME/go/bin
      file:
        path: "{{ ansible_env.HOME }}/go/bin"
        state: directory
    - name: Install dep
      shell: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      args:
        creates: "{{ gopath }}/bin/dep"
    - name: Show gerrit details
      run_once: true
      debug:
        msg:
          - "Fetch COE git repository https://git.opendaylight.org/gerrit/p/coe.git"
          - "gerrit_branch {{ gerrit_branch }}"
          - "gerrit_refspec {{ gerrit_refspec }}"
    - name: Fetch COE git repository
      git:
        repo: "https://git.opendaylight.org/gerrit/p/coe.git"
        version: "{{ gerrit_branch }}"
        refspec: "{{ gerrit_refspec }}"
        dest: "{{ coe_path }}"
    - name: List COE git repository recent patches
      run_once: true
      shell: "git --no-pager log --pretty=format:'%h %<(30)%ad %<(30)%cd %<(20,trunc)%an%d %s' -n10"
      args:
        chdir: "{{ coe_path }}"
      register: git_log_output
    - name: git log header
      run_once: true
      debug:
        msg="Hash    Author Date                    Commit Date                    Author               Subject"
    - name: git log output
      run_once: true
      debug:
        var=git_log_output.stdout_lines
    - name: Fetch odl-cni dependencies with dep
      shell: dep ensure -vendor-only
      args:
        chdir: "{{ coe_path }}/odlCNIPlugin/odlovs-cni"
        creates: "{{ coe_path }}/odlCNIPlugin/odlovs-cni/vendor"
    - name: Build odlovs-cni
      shell: go build
      args:
        chdir: "{{ coe_path }}/odlCNIPlugin/odlovs-cni"
        creates: "{{ coe_path }}/odlCNIPlugin/odlovs-cni/odlovs-cni"
    - name: Install odlovs-cni
      copy:
        src: "{{ coe_path }}/odlCNIPlugin/odlovs-cni/odlovs-cni"
        dest: "/opt/cni/bin/odlovs-cni"
        remote_src: true
        mode: 0755
      become: true

- hosts: coe-master
  vars:
    gopath: "{{ ansible_env.HOME}}/go"
    coe_path: "{{ gopath }}/src/git.opendaylight.org/gerrit/p/coe.git"
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin:/usr/local/go/bin:{{ gopath }}/bin:/usr/bin:/bin"
    GOPATH: "{{ gopath }}"
    GOROOT: /usr/local/go
  tasks:
    - name: Fetch watcher dependencies with dep
      shell: dep ensure -vendor-only
      args:
        chdir: "{{ coe_path }}/watcher"
        creates: "{{ coe_path }}/watcher/vendor"
    - name: Build watcher
      shell: go build
      args:
        chdir: "{{ coe_path }}/watcher"
        creates: "{{ coe_path }}/watcher/watcher"
    - name: Copy watcher to /usr/local/bin
      copy:
        src: "{{ coe_path }}/watcher/watcher"
        dest: /usr/local/bin/watcher
        mode: 0755
        remote_src: true
      become: true
    - name: Copy coe.yaml to /etc
      copy:
        src: "{{ watcher_path }}"
        dest: /etc
        mode: 0755
        remote_src: true
      become: true

- hosts: coe-hosts
  tasks:
    - name: Set OVS Manager
      shell: ovs-vsctl set-manager tcp:{{ manager_ip }}:{{ manager_port }} && touch /tmp/ovs-set-manager
      args:
        creates: /tmp/ovs-set-manager
      become: true
    - name: Enable auto-tunnelling
      shell: ovs-vsctl set O . other_config:local_ip={{ overlay_ip }} && touch /tmp/enable-auto-tunnel
      args:
        creates: /tmp/enable-auto-tunnel
      become: true
    - name: Enable docker in systemd
      systemd:
        name: docker
        daemon_reload: true
        enabled: true
        state: started
      become: true


- hosts: coe-master
  tasks:
    - name: Disable swapfile
      shell: swapoff -a
      become: true
    - name: Run kubeadm init
      shell: kubeadm init --apiserver-advertise-address={{ k8s_advertise_address }} > /tmp/k8s-output
      args:
        creates: /tmp/k8s-output
      become: true
    - name: Create join script
      shell: echo "#!/bin/sh" > /tmp/join-k8s.sh && cat /tmp/k8s-output | grep "kubeadm join" | sed -e 's/^[[:space:]]*//g' >> /tmp/join-k8s.sh
      args:
        creates: /tmp/join-k8s.sh
    - name: Fetch join script
      fetch:
        src: /tmp/join-k8s.sh
        dest: /tmp/join-k8s.sh
        flat: true
    - name: Make kube directory
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
    - name: Copy kubeconfig
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: true
      become: true

- hosts: coe-master
  tasks:
    - name: Run watcher
      shell: nohup watcher odl </dev/null >/tmp/watcher.out 2>&1 &
      args:
        creates: /tmp/watcher.out

- hosts: coe-minions
  tasks:
    - name: Disable swapfile
      shell: swapoff -a
      become: true
    - name: Copy join file
      copy:
        src: /tmp/join-k8s.sh
        dest: /tmp/join-k8s.sh
        mode: 0700
      become: true
    - name: Join cluster
      shell: /tmp/join-k8s.sh && touch /tmp/k8s-joined
      become: true
      args:
          creates: /tmp/k8s-joined

- hosts: coe-hosts
  vars:
      gopath: "{{ ansible_env.HOME}}/go"
      coe_path: "{{ gopath }}/src/git.opendaylight.org/gerrit/p/coe.git"
      watcher_path: "{{ coe_path }}/watcher"
  tasks:
      - name: Get hostname
        shell: "hostname"
        register: node_hostname_cmd
      - name: Set hostname variable
        set_fact:
            node_hostname="{{node_hostname_cmd.stdout_lines[0]}}"
      - name: Generate UID
        shell: "echo {{ node_hostname }} | sha256sum | awk '{print $1}' | xargs ./generate-uid.sh"
        args:
            chdir: "{{ watcher_path }}"
        register: node_uid_cmd
      - name: Set UID variable
        set_fact:
            node_uid={{node_uid_cmd.stdout_lines[0]}}
            veth_interface_id={{node_uid_cmd.stdout_lines[1]}}
      - name: Generate pod request
        template:
            src: "{{ pod_json_path }}"
            dest: /tmp/odl-pod.json
      - name: PUT to ODL
        shell: "curl -v -X PUT -u admin:admin -H \"Content-Type: application/json\" -d @/tmp/odl-pod.json http://{{controller_ip}}:{{restconf_port}}/restconf/config/pod:coe/pods/{{node_uid}} && touch /tmp/odl-pod-sent"
        args:
            creates: "/tmp/odl-pod-sent"
      - name: Create OVS port
        shell: "ovs-vsctl add-port br-int veth{{ veth_interface_id }} -- set Interface veth{{ veth_interface_id }} type=internal && touch /tmp/ovs-port-added"
        become: true
        args:
            creates: "/tmp/ovs-port-added"
      - name: Get interface mac address
        shell: "ifconfig veth{{ veth_interface_id }} | grep -i ether | awk '{print $5}'"
        register: mac_address_cmd
      - name: Register mac address variable
        set_fact:
            mac_address: "{{mac_address_cmd.stdout_lines[0]}}"
      - name: Configure veth port
        shell: "ovs-vsctl set Interface veth{{ veth_interface_id }} external-ids:iface-id='00000000-0000-0000-0000-000000000001:{{ node_hostname }}-services' external-ids:attached-mac=\"{{ mac_address }}\" external-ids:is-service-gateway=true && touch /tmp/ovs-interface-configured"
        args:
            creates: /tmp/ovs-interface-configured
        become: true
      - name: "Disable br-int linux interface"
        shell: "ip link set br-int down"
        become: true
      - name: Set veth ip
        shell: "ip addr add {{ services_ip_address }}/24 dev veth{{ veth_interface_id }} && touch /tmp/set-veth-ip"
        become: true
        args:
            creates: /tmp/set-veth-ip
      - name: Set veth state up
        shell: "ip link set dev veth{{ veth_interface_id }} up && touch /tmp/set-veth-up"
        become: true
        args:
            creates: /tmp/set-veth-up
      - name: Add services route
        shell: "ip route add 10.96.0.0/12 via {{ services_ip_address }} && touch /tmp/set-service-route"
        become: true
        args:
            creates: /tmp/set-service-route
      - name: Add default ovs flow
        shell: "ovs-ofctl -OOpenflow13 add-flow br-int table=21,priority=0,actions=resubmit\\(,17\\) && touch /tmp/ovs-default-flow-created"
        become: true
        args:
            creates: /tmp/ovs-default-flow-created
      - name: Add ip route
        shell: "ip route add 10.11.0.0/16 via {{ gateway }} && touch /tmp/pod-network-gateway-created"
        become: true
        args:
            creates: /tmp/pod-network-gateway-created
