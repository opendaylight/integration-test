{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_e3ff3132",
        "filename": "csit/libraries/OpenStackOperations.robot",
        "patchSetId": 24
      },
      "lineNbr": 5,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-09-26T16:08:48Z",
      "side": 1,
      "message": "${UUID_PATTERN} is defined in csit/variables/gbp/Constants.robot\n\nEither declare that variable file here, or move the definition to csit/variables/Variables.py",
      "range": {
        "startLine": 5,
        "startChar": 42,
        "endLine": 5,
        "endChar": 43
      },
      "revId": "6c52195884f74366024f221a16691c8a58646d31",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_c39e7506",
        "filename": "csit/libraries/OpenStackOperations.robot",
        "patchSetId": 24
      },
      "lineNbr": 147,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-09-26T16:08:48Z",
      "side": 1,
      "message": "Get_ControlNode_Connection performs unconditional SSHLibrary.Open_Connections, so I guess the correct way is to close the connection once it is not needed.\n\nWhy do some keywords close the connection and others do not?\nIf there is a reason, keyword Documentation should mention whether the new connection is closed or stays current.\n\nAlso, Get_ControlNode_Connection leaves the created connection as current, so no SSHLibrary.Switch_Connection is necessary. Finally, ${devstack_conn_id} is not used for anything else (than switching connection), so it may be omitted.",
      "range": {
        "startLine": 147,
        "startChar": 4,
        "endLine": 147,
        "endChar": 20
      },
      "revId": "6c52195884f74366024f221a16691c8a58646d31",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_c33792e1",
        "filename": "csit/libraries/OpenStackOperations.robot",
        "patchSetId": 24
      },
      "lineNbr": 147,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-09-27T10:49:16Z",
      "side": 1,
      "message": "Now I see that Get_ControlNode_Connection is used the same way in many places, so the refactor may be done in a separate Change.",
      "parentUuid": "7a6b29fe_c39e7506",
      "range": {
        "startLine": 147,
        "startChar": 4,
        "endLine": 147,
        "endChar": 20
      },
      "revId": "6c52195884f74366024f221a16691c8a58646d31",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_0cf88048",
        "filename": "csit/libraries/OpenStackOperations.robot",
        "patchSetId": 24
      },
      "lineNbr": 169,
      "author": {
        "id": 824
      },
      "writtenOn": "2016-10-05T23:46:06Z",
      "side": 1,
      "message": "Please change the description as  this kw creates router",
      "revId": "6c52195884f74366024f221a16691c8a58646d31",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_ccfde83d",
        "filename": "csit/libraries/OpenStackOperations.robot",
        "patchSetId": 24
      },
      "lineNbr": 179,
      "author": {
        "id": 824
      },
      "writtenOn": "2016-10-05T23:46:06Z",
      "side": 1,
      "message": "The same Keyword found below as \"Add Router Interface\" Maynot be the same command, but works similarly",
      "revId": "6c52195884f74366024f221a16691c8a58646d31",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_a4b79585",
        "filename": "csit/libraries/OpenStackOperations.robot",
        "patchSetId": 24
      },
      "lineNbr": 418,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-11-22T17:28:38Z",
      "side": 1,
      "message": "With respect to line 147 comments, there are several solutions.\n\nThe simple but perhaps ineffective solution would add keyword Documentation explaining this keyword (perhaps renamed to Open_ControlNode_Connection) opens a new SSH session, and caller should close the session as soon as interaction is done. Then SSHLibrary.Close_Connection would be added to every keyword in this file which calls this keyword.\n\nA more effective solution would change this keyword as in the previous case, but otherwise without any open or close calls in this file. Instead, Resource Documentation would mention most keywords require an already open and activated session, and would instruct suites to call this keyword once in suite setup (and close in suite teardown).\n\nThe least simple solution would manage a pool of connections in Resource-private variable, similarly to what KarafKeywords.robot does for karaf console ssh sessions.",
      "range": {
        "startLine": 418,
        "startChar": 0,
        "endLine": 418,
        "endChar": 26
      },
      "revId": "6c52195884f74366024f221a16691c8a58646d31",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}