{
  "comments": [
    {
      "key": {
        "uuid": "dad5f5cf_2ec19e80",
        "filename": "csit/libraries/FastFailing.robot",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-30T09:00:01Z",
      "side": 1,
      "message": "High risk of name collision. Think of people not prepending prefix.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 6
      },
      "revId": "b0982d38867d53c12be94020fde0d2f8e93b9441",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dad5f5cf_8e376ab0",
        "filename": "csit/libraries/FastFailing.robot",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 2046
      },
      "writtenOn": "2015-10-30T09:00:01Z",
      "side": 1,
      "message": "Is this really needed? Why not just introduce ${FastFailing__enabled} flag and let suite to define its own setup and teardown? Note that setup and teardown supports arguments, so you can have boolean-like argument disable_failfast in setup and enable_failfast in teardown.",
      "range": {
        "startLine": 42,
        "startChar": 4,
        "endLine": 42,
        "endChar": 20
      },
      "revId": "b0982d38867d53c12be94020fde0d2f8e93b9441",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}