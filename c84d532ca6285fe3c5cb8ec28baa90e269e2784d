{
  "comments": [
    {
      "key": {
        "uuid": "3a65312a_20d52e1c",
        "filename": "csit/suites/sxp/filtering/030_Inbound_Filtering_Discarding.robot",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-11-23T13:16:15Z",
      "side": 1,
      "message": "The strict check was already run 2 lines earlier, and no unexpected binding was present. How come peer reconnection does not happen before Delete_Filter?",
      "range": {
        "startLine": 27,
        "startChar": 68,
        "endLine": 27,
        "endChar": 75
      },
      "revId": "c84d532ca6285fe3c5cb8ec28baa90e269e2784d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_696f11fe",
        "filename": "csit/suites/sxp/filtering/030_Inbound_Filtering_Discarding.robot",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 3920
      },
      "writtenOn": "2016-11-24T10:48:56Z",
      "side": 1,
      "message": "Peer reconnection may happen during the first check of bindings but as the filter is present the state of database must remain consistent. After the filter is removed the state of database must remain the same as before until any of peers are reconnected. That is the idea behind thse tests.\n\nTest was expecting that after peers were connected they wont have to reconnect again, but from time to time peers reconnects themselfs and then the test are marked as FAILED due to issue described above.",
      "parentUuid": "3a65312a_20d52e1c",
      "range": {
        "startLine": 27,
        "startChar": 68,
        "endLine": 27,
        "endChar": 75
      },
      "revId": "c84d532ca6285fe3c5cb8ec28baa90e269e2784d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_750ebe8e",
        "filename": "csit/suites/sxp/filtering/030_Inbound_Filtering_Discarding.robot",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-11-25T11:02:42Z",
      "side": 1,
      "message": "I still do not see how a filter built from prefixes in lines 21,22 affects presence of bindings for prefixes in lines 209,211,217,219. What is \"consistent state of database\" in this case?\n\nAnother thing is usability. When users add/delete a filter, are they expecting a silent reconnect may alter the resulting bindings? If yes, is there a corrective action users should take?\nThis patch set corresponds to \"yes, expect reconnect\" and \"no, you have to live with additional bindings present\", which I find hard to believe is the correct set of answers.\nI expect either the reconnect to be a Bug (so Base should be kept failing), or at least users can detect and correct when it happens (so failed Check_One_Group_* WUKS would be followed by some action and the set of checks including Should_Not_Contain_Binding ones is retried).",
      "parentUuid": "3a65312a_696f11fe",
      "range": {
        "startLine": 27,
        "startChar": 68,
        "endLine": 27,
        "endChar": 75
      },
      "revId": "c84d532ca6285fe3c5cb8ec28baa90e269e2784d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_0784815c",
        "filename": "csit/suites/sxp/filtering/030_Inbound_Filtering_Discarding.robot",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 3920
      },
      "writtenOn": "2016-11-25T13:27:53Z",
      "side": 1,
      "message": "This reconnections of peer is from Boron considered as normal behavior, before it was considered as faulty state and test should fail due to its consequence. \n\nIt may be better solution to create separate checks for streams so that test remains consistent for previous releases...\n\nAs for \"consistence of database\" it means that while this type of filter is present database contains only data that is permited by filter. \nThis suite is testing specific type of filter that after is removed does not restore database to its previos state when filter was not applied.",
      "parentUuid": "3a65312a_750ebe8e",
      "range": {
        "startLine": 27,
        "startChar": 68,
        "endLine": 27,
        "endChar": 75
      },
      "revId": "c84d532ca6285fe3c5cb8ec28baa90e269e2784d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_076001a4",
        "filename": "csit/suites/sxp/filtering/030_Inbound_Filtering_Discarding.robot",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-11-25T13:43:49Z",
      "side": 1,
      "message": "\u003e\u003e bindings for prefixes in lines 209,211,217,219\n\nI will call them \"the excess bindings\" to keep sentences short.\n\n\u003e does not restore database to its previous state when filter was not applied.\n\nSo before line 24, were the excess bindings (going to be) present? Maybe there should be check on that, to prove line 24 has actually changed something. Is it possible that \"reconnections\" are just \"late processed connections\"?\n\n\u003e a corrective action\n\nWould repetition of Add_Filter and Delete_Filter (including WUKSes) be such an action? Are peers allowed to reconnect twice in a row?",
      "parentUuid": "3a65312a_0784815c",
      "range": {
        "startLine": 27,
        "startChar": 68,
        "endLine": 27,
        "endChar": 75
      },
      "revId": "c84d532ca6285fe3c5cb8ec28baa90e269e2784d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_673bb538",
        "filename": "csit/suites/sxp/filtering/030_Inbound_Filtering_Discarding.robot",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 3920
      },
      "writtenOn": "2016-11-25T15:36:44Z",
      "side": 1,
      "message": "Yes before line 24 those bindings were present. \nThe check on the initial state is skipped as that behaviour is tested in other suites ...\n|\"late proceeded connections\"\nYes these are late proceeded connections and the cause of this is that from Boron if SXP recieves OPEN/RESP messages on connection that is already functional it will close the old one a reconnects.\n| a corrective action\nYes repetition will restore it to expected state\nReconnection is described above.",
      "parentUuid": "3a65312a_076001a4",
      "range": {
        "startLine": 27,
        "startChar": 68,
        "endLine": 27,
        "endChar": 75
      },
      "revId": "c84d532ca6285fe3c5cb8ec28baa90e269e2784d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_876ed12d",
        "filename": "csit/suites/sxp/filtering/030_Inbound_Filtering_Discarding.robot",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-11-25T15:52:44Z",
      "side": 1,
      "message": "\u003e that behaviour is tested in other suites\n\nWhere? I assume it is tested that it happens within 4 seconds, but is it tested that it happens before line 24 gets executed here?\nI am not sure what exactly happens in those late connections, but one possibility is that if there was a WUKS before line 24, line 27 would not need ${TRUE}.\n\nAlso, please explain how do 21,22 prefixes affect the excess bindings. Every time I think about it, I end up with \"no obvious match ergo unrelated ergo should not affect\".",
      "parentUuid": "3a65312a_673bb538",
      "range": {
        "startLine": 27,
        "startChar": 68,
        "endLine": 27,
        "endChar": 75
      },
      "revId": "c84d532ca6285fe3c5cb8ec28baa90e269e2784d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a65312a_27725de5",
        "filename": "csit/suites/sxp/filtering/030_Inbound_Filtering_Discarding.robot",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 3920
      },
      "writtenOn": "2016-11-25T17:29:48Z",
      "side": 1,
      "message": "| that behaviour is tested in other suites\nIt is tested in Topology suites as those suites covers distribution of bindings to other SXP nodes. Thus this test build on fact that after peers were succesfully connected to each other bindings are propagated without problem.\n\nThe intial check can be added before line 24 to assure that database is ready and test may start, but without this check SXP is tested also for situation where filter is added during binding propagation.\n\nTo explain the situation of those late connections:\n\n1. Before test start it is verified that all perrs are connected\n2. We add filter that removed binding \"A\" from database\n3. Database is without bindings \"A\" \n4. Peer that is source of binding \"A\" reconnect and repropagate its bindings\n5. Node with filters recieves bindings \"A\" but it will be discarded\n6. We remove filter\n7. Database remains the same as with filter\n8. Strep 4 is repeated\n9. Node that contained filters recieves bindings \"A\" again but as there are no filters it will it will accept it and store it in database\n\n\u003d\u003d When the reconnection was not allowed (pre Boron) the binding \"A\" was not recieved multiple times after initial connection of peers\n\n|no obvious match\nIn keyword \"Check One Group 4-2\" we can see all bindings and if the filter from line 21,22 is applied it will allow olny bindings matching [ 10.10.10.* or 10.(odd number).0.0 ]\nthus bindings [ 10.10.20.0/24, 20.0.0.0/8, 10.10.40.0/24, 40.0.0.0/8 ] will be dropped",
      "parentUuid": "3a65312a_876ed12d",
      "range": {
        "startLine": 27,
        "startChar": 68,
        "endLine": 27,
        "endChar": 75
      },
      "revId": "c84d532ca6285fe3c5cb8ec28baa90e269e2784d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_3cbc956c",
        "filename": "csit/suites/sxp/filtering/030_Inbound_Filtering_Discarding.robot",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-11-28T16:45:59Z",
      "side": 1,
      "message": "\u003e allow only bindings matching\n\nOk, now I see what I was missing. The filter is added only for GROUP, so bindings from other peers are all allowed.\n\nSo, this particular filter removal only affects new connections, that is why the final bindings depend on whether a reconnect happened after the filter removal.\n\n\u003e without this check SXP is tested also for situation\n\u003e where filter is added during binding propagation.\n\nIs \"binding propagation\" for peer 127.0.0.2 the time between line 137 (for ${node}\u003d\u003d2 iteration) and the time a binding would be seen in line 211? I can imagine the call in line 25 can pass when binding 10.20.0.0/16 is propagated but binding 20.0.0.0/8 is not propagated yet, and this late binding would be seen in the line call.\n\nI would like tests to have deterministic checks, that is why I do not like random reconnects if a more careful line ordering could eliminate them.",
      "parentUuid": "3a65312a_27725de5",
      "range": {
        "startLine": 27,
        "startChar": 68,
        "endLine": 27,
        "endChar": 75
      },
      "revId": "c84d532ca6285fe3c5cb8ec28baa90e269e2784d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_8d5815fc",
        "filename": "csit/suites/sxp/filtering/030_Inbound_Filtering_Discarding.robot",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 3920
      },
      "writtenOn": "2016-11-29T10:07:00Z",
      "side": 1,
      "message": "Yes that situation that you have described may cause issues...\n\nI will update test so that bindings are added before connections are estabilished and it will eliminate issue that not all bindings may be propagated as you have described.",
      "parentUuid": "1a622d24_3cbc956c",
      "range": {
        "startLine": 27,
        "startChar": 68,
        "endLine": 27,
        "endChar": 75
      },
      "revId": "c84d532ca6285fe3c5cb8ec28baa90e269e2784d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}